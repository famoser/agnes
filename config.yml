agnes:
  github_api_token: '%env(GITHUB_API_TOKEN)%'
  build:
    connection:
      type: local
      path: .build

application:
  repository: famoser/agnes
  scripts:
    release:
      - composer install --verbose --prefer-dist --no-interaction --no-dev --optimize-autoloader --no-scripts

    deploy:
      - php bin/console cache:clear -n
      - cp -r $PREVIOUS_RELEASE_PATH/var/transient var/transient
      - find var -type d -print0 | xargs -0 chmod 0755
      - find var -type f -print0 | xargs -0 chmod 0644
      - php bin/console doctrine:migrations:migrate -n

    rollback:
      - cd $PREVIOUS_RELEASE_PATH && export MIGRATE_TO=$(php bin/console doctrine:migrations:latest)
      - php bin/console doctrine:migrations:migrate $MIGRATE_TO -n

    fixtures:
      - composer install --no-interaction --optimize-autoloader --no-scripts
      - php bin/console doctrine:fixtures:load -n

  paths:
    shared:
      - var/persistent

    env: .env.local

    files:
      - var/transient/domainOverrides.json
      - var/transient/authorization/whitelists/developers.txt

servers:
  mangel.io:
    connection:
      type: ssh
      path: '%env(SERVER_PATH)%' # the path of the installation will be $path/$environment_name/$environment
      destination: '%env(SERVER_DESTINATION)%'
    keep_releases: 2
    environments:
      app.mangel.io: [production, education, staging, dev]

policies:
  strategy: unanimous # all matching policies must be valid
  allow_if_all_abstain: true # if no matching policy is found, the execution is allowed

  deploy:
    - type: environment_write_up
      filter: null
      layers:
        0: [production, education]
        1: [staging]
        2: [dev]

    - type: release_whitelist
      filter:
        stages: [production, education, staging]
      commitishes: [master]

  copy_shared:
    - type: environment_write_down
      filter: null
      layers:
        0: [production]
        1: [dev, staging, education]

  fixtures:
    - type: whitelist
      filter:
        stages: [dev]

events:
  deploy:
    before:
      - filter:
          environment: [staging]
        command: copy_shared
        arguments: { source: production }

    after:
      - filter:
          environment: [dev]
        command: fixtures
